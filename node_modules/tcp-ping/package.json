{
  "name": "tcp-ping",
  "version": "0.1.0",
  "description": "A ping utility using TCP connection",
  "main": "ping.js",
  "scripts": {
    "test": "echo 0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/wesolyromek/tcp-ping.git"
  },
  "keywords": [
    "ping",
    "util",
    "tcp",
    "availability"
  ],
  "author": {
    "name": "Adam Paszke"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/wesolyromek/tcp-ping/issues"
  },
  "homepage": "https://github.com/wesolyromek/tcp-ping",
  "readme": "tcp-ping\n========\n\nTCP ping utility for node.js. You can test if chosen adress accepts connections at desired port and find out your latency. Great for service availability testing.\n\n#####Why not ```ping``` wrapper?\n\n* It's much faster than ```ping``` tool (as soon as connection gets accepted, it's dropped and a new measure is conducted immediately), so there's no unnecessary waiting between requests.\n* It allows you to test a specific service, not the whole connection\n* Some servers drop ICMP echo without any response, even when online. TCP can work in such cases.\n\n###Install\n\n```\nnpm install tcp-ping\n```\n\n###Functions\n\n#####ping(options, callback)\n\n```options``` is an object, which may contain several properties:\n\n* adress (adress to ping; defaults to ```localhost```)\n* port (defaults to ```80```)\n* timeout (in ms; defaults to 5s)\n* attempts (how many times to measure time; defaults to 10)\n\n```callback``` should be a function with arguments in node convention - ```function(err, data)```.\n\nReturned data is an object which looks like this:\n```javascript\n{ \n  adress: '46.28.246.123',\n  port: 80,\n  attempts: 10,\n  avg: 19.7848844,\n  max: 35.306233,\n  min: 16.526067,\n  results: \n   [ \n    { seq: 0, time: 35.306233 },\n    { seq: 1, time: 16.585919 },\n    ...\n    { seq: 9, time: 17.625968 } \n   ] \n}\n```\n\n#####probe(adress, port, callback)\n```callback``` is a node style callback ```function(err, data)```, where data is true if the server is available and false otherwise.\n\n###Usage\n\n```javascript\nvar tcpp = require('tcp-ping');\n\ntcpp.probe('46.28.246.123', 80, function(err, available) {\n    console.log(available);\n});\n\ntcpp.ping({ adress: '46.28.246.123' }, function(err, data) {\n    console.log(data);\n});\n```",
  "readmeFilename": "README.md",
  "_id": "tcp-ping@0.1.0",
  "dist": {
    "shasum": "2f376b2ea3ad3dc5eecd4e6f1cc970eb99ac80f5"
  },
  "_from": "tcp-ping@latest",
  "_resolved": "https://registry.npmjs.org/tcp-ping/-/tcp-ping-0.1.0.tgz"
}
